// Code generated by ent, DO NOT EDIT.

package ent

import (
	"go.authbricks.com/bricks/ent/authorizationcode"
	"go.authbricks.com/bricks/ent/authorizationpayload"
	"go.authbricks.com/bricks/ent/codegrant"
	"go.authbricks.com/bricks/ent/cookiestore"
	"go.authbricks.com/bricks/ent/credentials"
	"go.authbricks.com/bricks/ent/keyset"
	"go.authbricks.com/bricks/ent/m2mgrant"
	"go.authbricks.com/bricks/ent/oauthclient"
	"go.authbricks.com/bricks/ent/refreshtoken"
	"go.authbricks.com/bricks/ent/schema"
	"go.authbricks.com/bricks/ent/session"
	"go.authbricks.com/bricks/ent/signingkey"
	"go.authbricks.com/bricks/ent/standardclaims"
	"go.authbricks.com/bricks/ent/user"
	"go.authbricks.com/bricks/ent/userpool"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authorizationcodeFields := schema.AuthorizationCode{}.Fields()
	_ = authorizationcodeFields
	// authorizationcodeDescID is the schema descriptor for id field.
	authorizationcodeDescID := authorizationcodeFields[0].Descriptor()
	// authorizationcode.IDValidator is a validator for the "id" field. It is called by the builders before save.
	authorizationcode.IDValidator = authorizationcodeDescID.Validators[0].(func(string) error)
	authorizationpayloadFields := schema.AuthorizationPayload{}.Fields()
	_ = authorizationpayloadFields
	// authorizationpayloadDescID is the schema descriptor for id field.
	authorizationpayloadDescID := authorizationpayloadFields[0].Descriptor()
	// authorizationpayload.IDValidator is a validator for the "id" field. It is called by the builders before save.
	authorizationpayload.IDValidator = authorizationpayloadDescID.Validators[0].(func(string) error)
	codegrantFields := schema.CodeGrant{}.Fields()
	_ = codegrantFields
	// codegrantDescID is the schema descriptor for id field.
	codegrantDescID := codegrantFields[0].Descriptor()
	// codegrant.IDValidator is a validator for the "id" field. It is called by the builders before save.
	codegrant.IDValidator = codegrantDescID.Validators[0].(func(string) error)
	cookiestoreFields := schema.CookieStore{}.Fields()
	_ = cookiestoreFields
	// cookiestoreDescAuthKey is the schema descriptor for auth_key field.
	cookiestoreDescAuthKey := cookiestoreFields[1].Descriptor()
	// cookiestore.AuthKeyValidator is a validator for the "auth_key" field. It is called by the builders before save.
	cookiestore.AuthKeyValidator = cookiestoreDescAuthKey.Validators[0].(func(string) error)
	// cookiestoreDescEncryptionKey is the schema descriptor for encryption_key field.
	cookiestoreDescEncryptionKey := cookiestoreFields[2].Descriptor()
	// cookiestore.EncryptionKeyValidator is a validator for the "encryption_key" field. It is called by the builders before save.
	cookiestore.EncryptionKeyValidator = cookiestoreDescEncryptionKey.Validators[0].(func(string) error)
	// cookiestoreDescID is the schema descriptor for id field.
	cookiestoreDescID := cookiestoreFields[0].Descriptor()
	// cookiestore.IDValidator is a validator for the "id" field. It is called by the builders before save.
	cookiestore.IDValidator = cookiestoreDescID.Validators[0].(func(string) error)
	credentialsFields := schema.Credentials{}.Fields()
	_ = credentialsFields
	// credentialsDescClientID is the schema descriptor for client_id field.
	credentialsDescClientID := credentialsFields[1].Descriptor()
	// credentials.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	credentials.ClientIDValidator = credentialsDescClientID.Validators[0].(func(string) error)
	// credentialsDescID is the schema descriptor for id field.
	credentialsDescID := credentialsFields[0].Descriptor()
	// credentials.IDValidator is a validator for the "id" field. It is called by the builders before save.
	credentials.IDValidator = credentialsDescID.Validators[0].(func(string) error)
	keysetFields := schema.KeySet{}.Fields()
	_ = keysetFields
	// keysetDescID is the schema descriptor for id field.
	keysetDescID := keysetFields[0].Descriptor()
	// keyset.IDValidator is a validator for the "id" field. It is called by the builders before save.
	keyset.IDValidator = keysetDescID.Validators[0].(func(string) error)
	m2mgrantFields := schema.M2MGrant{}.Fields()
	_ = m2mgrantFields
	// m2mgrantDescID is the schema descriptor for id field.
	m2mgrantDescID := m2mgrantFields[0].Descriptor()
	// m2mgrant.IDValidator is a validator for the "id" field. It is called by the builders before save.
	m2mgrant.IDValidator = m2mgrantDescID.Validators[0].(func(string) error)
	oauthclientFields := schema.OAuthClient{}.Fields()
	_ = oauthclientFields
	// oauthclientDescName is the schema descriptor for name field.
	oauthclientDescName := oauthclientFields[1].Descriptor()
	// oauthclient.NameValidator is a validator for the "name" field. It is called by the builders before save.
	oauthclient.NameValidator = oauthclientDescName.Validators[0].(func(string) error)
	// oauthclientDescPublic is the schema descriptor for public field.
	oauthclientDescPublic := oauthclientFields[2].Descriptor()
	// oauthclient.DefaultPublic holds the default value on creation for the public field.
	oauthclient.DefaultPublic = oauthclientDescPublic.Default.(bool)
	// oauthclientDescID is the schema descriptor for id field.
	oauthclientDescID := oauthclientFields[0].Descriptor()
	// oauthclient.IDValidator is a validator for the "id" field. It is called by the builders before save.
	oauthclient.IDValidator = oauthclientDescID.Validators[0].(func(string) error)
	refreshtokenFields := schema.RefreshToken{}.Fields()
	_ = refreshtokenFields
	// refreshtokenDescCreatedAt is the schema descriptor for created_at field.
	refreshtokenDescCreatedAt := refreshtokenFields[4].Descriptor()
	// refreshtoken.CreatedAtValidator is a validator for the "created_at" field. It is called by the builders before save.
	refreshtoken.CreatedAtValidator = refreshtokenDescCreatedAt.Validators[0].(func(int64) error)
	// refreshtokenDescLifetime is the schema descriptor for lifetime field.
	refreshtokenDescLifetime := refreshtokenFields[6].Descriptor()
	// refreshtoken.LifetimeValidator is a validator for the "lifetime" field. It is called by the builders before save.
	refreshtoken.LifetimeValidator = refreshtokenDescLifetime.Validators[0].(func(int64) error)
	// refreshtokenDescID is the schema descriptor for id field.
	refreshtokenDescID := refreshtokenFields[0].Descriptor()
	// refreshtoken.IDValidator is a validator for the "id" field. It is called by the builders before save.
	refreshtoken.IDValidator = refreshtokenDescID.Validators[0].(func(string) error)
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionFields[1].Descriptor()
	// session.CreatedAtValidator is a validator for the "created_at" field. It is called by the builders before save.
	session.CreatedAtValidator = sessionDescCreatedAt.Validators[0].(func(int64) error)
	// sessionDescServerName is the schema descriptor for server_name field.
	sessionDescServerName := sessionFields[2].Descriptor()
	// session.ServerNameValidator is a validator for the "server_name" field. It is called by the builders before save.
	session.ServerNameValidator = sessionDescServerName.Validators[0].(func(string) error)
	// sessionDescID is the schema descriptor for id field.
	sessionDescID := sessionFields[0].Descriptor()
	// session.IDValidator is a validator for the "id" field. It is called by the builders before save.
	session.IDValidator = sessionDescID.Validators[0].(func(string) error)
	signingkeyFields := schema.SigningKey{}.Fields()
	_ = signingkeyFields
	// signingkeyDescKey is the schema descriptor for key field.
	signingkeyDescKey := signingkeyFields[1].Descriptor()
	// signingkey.KeyValidator is a validator for the "key" field. It is called by the builders before save.
	signingkey.KeyValidator = signingkeyDescKey.Validators[0].(func(string) error)
	// signingkeyDescID is the schema descriptor for id field.
	signingkeyDescID := signingkeyFields[0].Descriptor()
	// signingkey.IDValidator is a validator for the "id" field. It is called by the builders before save.
	signingkey.IDValidator = signingkeyDescID.Validators[0].(func(string) error)
	standardclaimsFields := schema.StandardClaims{}.Fields()
	_ = standardclaimsFields
	// standardclaimsDescSubject is the schema descriptor for subject field.
	standardclaimsDescSubject := standardclaimsFields[0].Descriptor()
	// standardclaims.SubjectValidator is a validator for the "subject" field. It is called by the builders before save.
	standardclaims.SubjectValidator = standardclaimsDescSubject.Validators[0].(func(string) error)
	// standardclaimsDescEmailVerified is the schema descriptor for email_verified field.
	standardclaimsDescEmailVerified := standardclaimsFields[11].Descriptor()
	// standardclaims.DefaultEmailVerified holds the default value on creation for the email_verified field.
	standardclaims.DefaultEmailVerified = standardclaimsDescEmailVerified.Default.(bool)
	// standardclaimsDescPhoneNumberVerified is the schema descriptor for phone_number_verified field.
	standardclaimsDescPhoneNumberVerified := standardclaimsFields[17].Descriptor()
	// standardclaims.DefaultPhoneNumberVerified holds the default value on creation for the phone_number_verified field.
	standardclaims.DefaultPhoneNumberVerified = standardclaimsDescPhoneNumberVerified.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(string) error)
	userpoolFields := schema.UserPool{}.Fields()
	_ = userpoolFields
	// userpoolDescID is the schema descriptor for id field.
	userpoolDescID := userpoolFields[0].Descriptor()
	// userpool.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userpool.IDValidator = userpoolDescID.Validators[0].(func(string) error)
}
