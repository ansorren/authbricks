// Code generated by ent, DO NOT EDIT.

package ent

import (
	"go.authbricks.com/bricks/ent/application"
	"go.authbricks.com/bricks/ent/authorizationcode"
	"go.authbricks.com/bricks/ent/authorizationendpointconfig"
	"go.authbricks.com/bricks/ent/authorizationpayload"
	"go.authbricks.com/bricks/ent/connectionconfig"
	"go.authbricks.com/bricks/ent/cookiestore"
	"go.authbricks.com/bricks/ent/credentials"
	"go.authbricks.com/bricks/ent/emailpasswordconnection"
	"go.authbricks.com/bricks/ent/introspectionendpointconfig"
	"go.authbricks.com/bricks/ent/jwksendpointconfig"
	"go.authbricks.com/bricks/ent/keyset"
	"go.authbricks.com/bricks/ent/loginendpointconfig"
	"go.authbricks.com/bricks/ent/oidcconnection"
	"go.authbricks.com/bricks/ent/refreshtoken"
	"go.authbricks.com/bricks/ent/schema"
	"go.authbricks.com/bricks/ent/service"
	"go.authbricks.com/bricks/ent/session"
	"go.authbricks.com/bricks/ent/signingkey"
	"go.authbricks.com/bricks/ent/standardclaims"
	"go.authbricks.com/bricks/ent/tokenendpointconfig"
	"go.authbricks.com/bricks/ent/user"
	"go.authbricks.com/bricks/ent/userinfoendpointconfig"
	"go.authbricks.com/bricks/ent/wellknownendpointconfig"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	applicationFields := schema.Application{}.Fields()
	_ = applicationFields
	// applicationDescName is the schema descriptor for name field.
	applicationDescName := applicationFields[1].Descriptor()
	// application.NameValidator is a validator for the "name" field. It is called by the builders before save.
	application.NameValidator = applicationDescName.Validators[0].(func(string) error)
	// applicationDescPublic is the schema descriptor for public field.
	applicationDescPublic := applicationFields[2].Descriptor()
	// application.DefaultPublic holds the default value on creation for the public field.
	application.DefaultPublic = applicationDescPublic.Default.(bool)
	// applicationDescPKCERequired is the schema descriptor for PKCE_required field.
	applicationDescPKCERequired := applicationFields[8].Descriptor()
	// application.DefaultPKCERequired holds the default value on creation for the PKCE_required field.
	application.DefaultPKCERequired = applicationDescPKCERequired.Default.(bool)
	// applicationDescS256CodeChallengeMethodRequired is the schema descriptor for s256_code_challenge_method_required field.
	applicationDescS256CodeChallengeMethodRequired := applicationFields[9].Descriptor()
	// application.DefaultS256CodeChallengeMethodRequired holds the default value on creation for the s256_code_challenge_method_required field.
	application.DefaultS256CodeChallengeMethodRequired = applicationDescS256CodeChallengeMethodRequired.Default.(bool)
	// applicationDescID is the schema descriptor for id field.
	applicationDescID := applicationFields[0].Descriptor()
	// application.IDValidator is a validator for the "id" field. It is called by the builders before save.
	application.IDValidator = applicationDescID.Validators[0].(func(string) error)
	authorizationcodeFields := schema.AuthorizationCode{}.Fields()
	_ = authorizationcodeFields
	// authorizationcodeDescID is the schema descriptor for id field.
	authorizationcodeDescID := authorizationcodeFields[0].Descriptor()
	// authorizationcode.IDValidator is a validator for the "id" field. It is called by the builders before save.
	authorizationcode.IDValidator = authorizationcodeDescID.Validators[0].(func(string) error)
	authorizationendpointconfigFields := schema.AuthorizationEndpointConfig{}.Fields()
	_ = authorizationendpointconfigFields
	// authorizationendpointconfigDescEndpoint is the schema descriptor for endpoint field.
	authorizationendpointconfigDescEndpoint := authorizationendpointconfigFields[1].Descriptor()
	// authorizationendpointconfig.EndpointValidator is a validator for the "endpoint" field. It is called by the builders before save.
	authorizationendpointconfig.EndpointValidator = authorizationendpointconfigDescEndpoint.Validators[0].(func(string) error)
	// authorizationendpointconfigDescID is the schema descriptor for id field.
	authorizationendpointconfigDescID := authorizationendpointconfigFields[0].Descriptor()
	// authorizationendpointconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	authorizationendpointconfig.IDValidator = authorizationendpointconfigDescID.Validators[0].(func(string) error)
	authorizationpayloadFields := schema.AuthorizationPayload{}.Fields()
	_ = authorizationpayloadFields
	// authorizationpayloadDescID is the schema descriptor for id field.
	authorizationpayloadDescID := authorizationpayloadFields[0].Descriptor()
	// authorizationpayload.IDValidator is a validator for the "id" field. It is called by the builders before save.
	authorizationpayload.IDValidator = authorizationpayloadDescID.Validators[0].(func(string) error)
	connectionconfigFields := schema.ConnectionConfig{}.Fields()
	_ = connectionconfigFields
	// connectionconfigDescID is the schema descriptor for id field.
	connectionconfigDescID := connectionconfigFields[0].Descriptor()
	// connectionconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	connectionconfig.IDValidator = connectionconfigDescID.Validators[0].(func(string) error)
	cookiestoreFields := schema.CookieStore{}.Fields()
	_ = cookiestoreFields
	// cookiestoreDescAuthKey is the schema descriptor for auth_key field.
	cookiestoreDescAuthKey := cookiestoreFields[1].Descriptor()
	// cookiestore.AuthKeyValidator is a validator for the "auth_key" field. It is called by the builders before save.
	cookiestore.AuthKeyValidator = cookiestoreDescAuthKey.Validators[0].(func(string) error)
	// cookiestoreDescEncryptionKey is the schema descriptor for encryption_key field.
	cookiestoreDescEncryptionKey := cookiestoreFields[2].Descriptor()
	// cookiestore.EncryptionKeyValidator is a validator for the "encryption_key" field. It is called by the builders before save.
	cookiestore.EncryptionKeyValidator = cookiestoreDescEncryptionKey.Validators[0].(func(string) error)
	// cookiestoreDescID is the schema descriptor for id field.
	cookiestoreDescID := cookiestoreFields[0].Descriptor()
	// cookiestore.IDValidator is a validator for the "id" field. It is called by the builders before save.
	cookiestore.IDValidator = cookiestoreDescID.Validators[0].(func(string) error)
	credentialsFields := schema.Credentials{}.Fields()
	_ = credentialsFields
	// credentialsDescClientID is the schema descriptor for client_id field.
	credentialsDescClientID := credentialsFields[1].Descriptor()
	// credentials.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	credentials.ClientIDValidator = credentialsDescClientID.Validators[0].(func(string) error)
	// credentialsDescID is the schema descriptor for id field.
	credentialsDescID := credentialsFields[0].Descriptor()
	// credentials.IDValidator is a validator for the "id" field. It is called by the builders before save.
	credentials.IDValidator = credentialsDescID.Validators[0].(func(string) error)
	emailpasswordconnectionFields := schema.EmailPasswordConnection{}.Fields()
	_ = emailpasswordconnectionFields
	// emailpasswordconnectionDescEnabled is the schema descriptor for enabled field.
	emailpasswordconnectionDescEnabled := emailpasswordconnectionFields[1].Descriptor()
	// emailpasswordconnection.DefaultEnabled holds the default value on creation for the enabled field.
	emailpasswordconnection.DefaultEnabled = emailpasswordconnectionDescEnabled.Default.(bool)
	// emailpasswordconnectionDescID is the schema descriptor for id field.
	emailpasswordconnectionDescID := emailpasswordconnectionFields[0].Descriptor()
	// emailpasswordconnection.IDValidator is a validator for the "id" field. It is called by the builders before save.
	emailpasswordconnection.IDValidator = emailpasswordconnectionDescID.Validators[0].(func(string) error)
	introspectionendpointconfigFields := schema.IntrospectionEndpointConfig{}.Fields()
	_ = introspectionendpointconfigFields
	// introspectionendpointconfigDescEndpoint is the schema descriptor for endpoint field.
	introspectionendpointconfigDescEndpoint := introspectionendpointconfigFields[1].Descriptor()
	// introspectionendpointconfig.EndpointValidator is a validator for the "endpoint" field. It is called by the builders before save.
	introspectionendpointconfig.EndpointValidator = introspectionendpointconfigDescEndpoint.Validators[0].(func(string) error)
	// introspectionendpointconfigDescID is the schema descriptor for id field.
	introspectionendpointconfigDescID := introspectionendpointconfigFields[0].Descriptor()
	// introspectionendpointconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	introspectionendpointconfig.IDValidator = introspectionendpointconfigDescID.Validators[0].(func(string) error)
	jwksendpointconfigFields := schema.JwksEndpointConfig{}.Fields()
	_ = jwksendpointconfigFields
	// jwksendpointconfigDescEndpoint is the schema descriptor for endpoint field.
	jwksendpointconfigDescEndpoint := jwksendpointconfigFields[1].Descriptor()
	// jwksendpointconfig.EndpointValidator is a validator for the "endpoint" field. It is called by the builders before save.
	jwksendpointconfig.EndpointValidator = jwksendpointconfigDescEndpoint.Validators[0].(func(string) error)
	// jwksendpointconfigDescID is the schema descriptor for id field.
	jwksendpointconfigDescID := jwksendpointconfigFields[0].Descriptor()
	// jwksendpointconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	jwksendpointconfig.IDValidator = jwksendpointconfigDescID.Validators[0].(func(string) error)
	keysetFields := schema.KeySet{}.Fields()
	_ = keysetFields
	// keysetDescID is the schema descriptor for id field.
	keysetDescID := keysetFields[0].Descriptor()
	// keyset.IDValidator is a validator for the "id" field. It is called by the builders before save.
	keyset.IDValidator = keysetDescID.Validators[0].(func(string) error)
	loginendpointconfigFields := schema.LoginEndpointConfig{}.Fields()
	_ = loginendpointconfigFields
	// loginendpointconfigDescEndpoint is the schema descriptor for endpoint field.
	loginendpointconfigDescEndpoint := loginendpointconfigFields[1].Descriptor()
	// loginendpointconfig.EndpointValidator is a validator for the "endpoint" field. It is called by the builders before save.
	loginendpointconfig.EndpointValidator = loginendpointconfigDescEndpoint.Validators[0].(func(string) error)
	// loginendpointconfigDescSessionTimeout is the schema descriptor for session_timeout field.
	loginendpointconfigDescSessionTimeout := loginendpointconfigFields[2].Descriptor()
	// loginendpointconfig.SessionTimeoutValidator is a validator for the "session_timeout" field. It is called by the builders before save.
	loginendpointconfig.SessionTimeoutValidator = loginendpointconfigDescSessionTimeout.Validators[0].(func(int64) error)
	// loginendpointconfigDescID is the schema descriptor for id field.
	loginendpointconfigDescID := loginendpointconfigFields[0].Descriptor()
	// loginendpointconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	loginendpointconfig.IDValidator = loginendpointconfigDescID.Validators[0].(func(string) error)
	oidcconnectionFields := schema.OIDCConnection{}.Fields()
	_ = oidcconnectionFields
	// oidcconnectionDescEnabled is the schema descriptor for enabled field.
	oidcconnectionDescEnabled := oidcconnectionFields[1].Descriptor()
	// oidcconnection.DefaultEnabled holds the default value on creation for the enabled field.
	oidcconnection.DefaultEnabled = oidcconnectionDescEnabled.Default.(bool)
	// oidcconnectionDescID is the schema descriptor for id field.
	oidcconnectionDescID := oidcconnectionFields[0].Descriptor()
	// oidcconnection.IDValidator is a validator for the "id" field. It is called by the builders before save.
	oidcconnection.IDValidator = oidcconnectionDescID.Validators[0].(func(string) error)
	refreshtokenFields := schema.RefreshToken{}.Fields()
	_ = refreshtokenFields
	// refreshtokenDescCreatedAt is the schema descriptor for created_at field.
	refreshtokenDescCreatedAt := refreshtokenFields[4].Descriptor()
	// refreshtoken.CreatedAtValidator is a validator for the "created_at" field. It is called by the builders before save.
	refreshtoken.CreatedAtValidator = refreshtokenDescCreatedAt.Validators[0].(func(int64) error)
	// refreshtokenDescLifetime is the schema descriptor for lifetime field.
	refreshtokenDescLifetime := refreshtokenFields[6].Descriptor()
	// refreshtoken.LifetimeValidator is a validator for the "lifetime" field. It is called by the builders before save.
	refreshtoken.LifetimeValidator = refreshtokenDescLifetime.Validators[0].(func(int64) error)
	// refreshtokenDescID is the schema descriptor for id field.
	refreshtokenDescID := refreshtokenFields[0].Descriptor()
	// refreshtoken.IDValidator is a validator for the "id" field. It is called by the builders before save.
	refreshtoken.IDValidator = refreshtokenDescID.Validators[0].(func(string) error)
	serviceFields := schema.Service{}.Fields()
	_ = serviceFields
	// serviceDescName is the schema descriptor for name field.
	serviceDescName := serviceFields[1].Descriptor()
	// service.NameValidator is a validator for the "name" field. It is called by the builders before save.
	service.NameValidator = serviceDescName.Validators[0].(func(string) error)
	// serviceDescIssuer is the schema descriptor for issuer field.
	serviceDescIssuer := serviceFields[2].Descriptor()
	// service.IssuerValidator is a validator for the "issuer" field. It is called by the builders before save.
	service.IssuerValidator = serviceDescIssuer.Validators[0].(func(string) error)
	// serviceDescID is the schema descriptor for id field.
	serviceDescID := serviceFields[0].Descriptor()
	// service.IDValidator is a validator for the "id" field. It is called by the builders before save.
	service.IDValidator = serviceDescID.Validators[0].(func(string) error)
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionFields[1].Descriptor()
	// session.CreatedAtValidator is a validator for the "created_at" field. It is called by the builders before save.
	session.CreatedAtValidator = sessionDescCreatedAt.Validators[0].(func(int64) error)
	// sessionDescServiceName is the schema descriptor for service_name field.
	sessionDescServiceName := sessionFields[2].Descriptor()
	// session.ServiceNameValidator is a validator for the "service_name" field. It is called by the builders before save.
	session.ServiceNameValidator = sessionDescServiceName.Validators[0].(func(string) error)
	// sessionDescID is the schema descriptor for id field.
	sessionDescID := sessionFields[0].Descriptor()
	// session.IDValidator is a validator for the "id" field. It is called by the builders before save.
	session.IDValidator = sessionDescID.Validators[0].(func(string) error)
	signingkeyFields := schema.SigningKey{}.Fields()
	_ = signingkeyFields
	// signingkeyDescKey is the schema descriptor for key field.
	signingkeyDescKey := signingkeyFields[1].Descriptor()
	// signingkey.KeyValidator is a validator for the "key" field. It is called by the builders before save.
	signingkey.KeyValidator = signingkeyDescKey.Validators[0].(func(string) error)
	// signingkeyDescID is the schema descriptor for id field.
	signingkeyDescID := signingkeyFields[0].Descriptor()
	// signingkey.IDValidator is a validator for the "id" field. It is called by the builders before save.
	signingkey.IDValidator = signingkeyDescID.Validators[0].(func(string) error)
	standardclaimsFields := schema.StandardClaims{}.Fields()
	_ = standardclaimsFields
	// standardclaimsDescSubject is the schema descriptor for subject field.
	standardclaimsDescSubject := standardclaimsFields[0].Descriptor()
	// standardclaims.SubjectValidator is a validator for the "subject" field. It is called by the builders before save.
	standardclaims.SubjectValidator = standardclaimsDescSubject.Validators[0].(func(string) error)
	// standardclaimsDescEmailVerified is the schema descriptor for email_verified field.
	standardclaimsDescEmailVerified := standardclaimsFields[11].Descriptor()
	// standardclaims.DefaultEmailVerified holds the default value on creation for the email_verified field.
	standardclaims.DefaultEmailVerified = standardclaimsDescEmailVerified.Default.(bool)
	// standardclaimsDescPhoneNumberVerified is the schema descriptor for phone_number_verified field.
	standardclaimsDescPhoneNumberVerified := standardclaimsFields[17].Descriptor()
	// standardclaims.DefaultPhoneNumberVerified holds the default value on creation for the phone_number_verified field.
	standardclaims.DefaultPhoneNumberVerified = standardclaimsDescPhoneNumberVerified.Default.(bool)
	tokenendpointconfigFields := schema.TokenEndpointConfig{}.Fields()
	_ = tokenendpointconfigFields
	// tokenendpointconfigDescEndpoint is the schema descriptor for endpoint field.
	tokenendpointconfigDescEndpoint := tokenendpointconfigFields[1].Descriptor()
	// tokenendpointconfig.EndpointValidator is a validator for the "endpoint" field. It is called by the builders before save.
	tokenendpointconfig.EndpointValidator = tokenendpointconfigDescEndpoint.Validators[0].(func(string) error)
	// tokenendpointconfigDescID is the schema descriptor for id field.
	tokenendpointconfigDescID := tokenendpointconfigFields[0].Descriptor()
	// tokenendpointconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	tokenendpointconfig.IDValidator = tokenendpointconfigDescID.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(string) error)
	userinfoendpointconfigFields := schema.UserInfoEndpointConfig{}.Fields()
	_ = userinfoendpointconfigFields
	// userinfoendpointconfigDescEndpoint is the schema descriptor for endpoint field.
	userinfoendpointconfigDescEndpoint := userinfoendpointconfigFields[1].Descriptor()
	// userinfoendpointconfig.EndpointValidator is a validator for the "endpoint" field. It is called by the builders before save.
	userinfoendpointconfig.EndpointValidator = userinfoendpointconfigDescEndpoint.Validators[0].(func(string) error)
	// userinfoendpointconfigDescID is the schema descriptor for id field.
	userinfoendpointconfigDescID := userinfoendpointconfigFields[0].Descriptor()
	// userinfoendpointconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userinfoendpointconfig.IDValidator = userinfoendpointconfigDescID.Validators[0].(func(string) error)
	wellknownendpointconfigFields := schema.WellKnownEndpointConfig{}.Fields()
	_ = wellknownendpointconfigFields
	// wellknownendpointconfigDescEndpoint is the schema descriptor for endpoint field.
	wellknownendpointconfigDescEndpoint := wellknownendpointconfigFields[1].Descriptor()
	// wellknownendpointconfig.EndpointValidator is a validator for the "endpoint" field. It is called by the builders before save.
	wellknownendpointconfig.EndpointValidator = wellknownendpointconfigDescEndpoint.Validators[0].(func(string) error)
	// wellknownendpointconfigDescID is the schema descriptor for id field.
	wellknownendpointconfigDescID := wellknownendpointconfigFields[0].Descriptor()
	// wellknownendpointconfig.IDValidator is a validator for the "id" field. It is called by the builders before save.
	wellknownendpointconfig.IDValidator = wellknownendpointconfigDescID.Validators[0].(func(string) error)
}
