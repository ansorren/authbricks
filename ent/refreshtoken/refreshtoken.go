// Code generated by ent, DO NOT EDIT.

package refreshtoken

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the refreshtoken type in the database.
	Label = "refresh_token"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldClientName holds the string denoting the client_name field in the database.
	FieldClientName = "client_name"
	// FieldServerName holds the string denoting the server_name field in the database.
	FieldServerName = "server_name"
	// FieldScopes holds the string denoting the scopes field in the database.
	FieldScopes = "scopes"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldAccessTokenID holds the string denoting the access_token_id field in the database.
	FieldAccessTokenID = "access_token_id"
	// FieldLifetime holds the string denoting the lifetime field in the database.
	FieldLifetime = "lifetime"
	// FieldSubject holds the string denoting the subject field in the database.
	FieldSubject = "subject"
	// FieldKeyID holds the string denoting the key_id field in the database.
	FieldKeyID = "key_id"
	// FieldAuthTime holds the string denoting the auth_time field in the database.
	FieldAuthTime = "auth_time"
	// Table holds the table name of the refreshtoken in the database.
	Table = "refresh_tokens"
)

// Columns holds all SQL columns for refreshtoken fields.
var Columns = []string{
	FieldID,
	FieldClientName,
	FieldServerName,
	FieldScopes,
	FieldCreatedAt,
	FieldAccessTokenID,
	FieldLifetime,
	FieldSubject,
	FieldKeyID,
	FieldAuthTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// CreatedAtValidator is a validator for the "created_at" field. It is called by the builders before save.
	CreatedAtValidator func(int64) error
	// LifetimeValidator is a validator for the "lifetime" field. It is called by the builders before save.
	LifetimeValidator func(int64) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)

// OrderOption defines the ordering options for the RefreshToken queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByClientName orders the results by the client_name field.
func ByClientName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldClientName, opts...).ToFunc()
}

// ByServerName orders the results by the server_name field.
func ByServerName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldServerName, opts...).ToFunc()
}

// ByScopes orders the results by the scopes field.
func ByScopes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldScopes, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByAccessTokenID orders the results by the access_token_id field.
func ByAccessTokenID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAccessTokenID, opts...).ToFunc()
}

// ByLifetime orders the results by the lifetime field.
func ByLifetime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLifetime, opts...).ToFunc()
}

// BySubject orders the results by the subject field.
func BySubject(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubject, opts...).ToFunc()
}

// ByKeyID orders the results by the key_id field.
func ByKeyID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKeyID, opts...).ToFunc()
}

// ByAuthTime orders the results by the auth_time field.
func ByAuthTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAuthTime, opts...).ToFunc()
}
