// Code generated by ent, DO NOT EDIT.

package standardclaims

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"go.authbricks.com/bricks/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldID, id))
}

// Subject applies equality check predicate on the "subject" field. It's identical to SubjectEQ.
func Subject(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldSubject, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldName, v))
}

// GivenName applies equality check predicate on the "given_name" field. It's identical to GivenNameEQ.
func GivenName(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldGivenName, v))
}

// FamilyName applies equality check predicate on the "family_name" field. It's identical to FamilyNameEQ.
func FamilyName(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldFamilyName, v))
}

// MiddleName applies equality check predicate on the "middle_name" field. It's identical to MiddleNameEQ.
func MiddleName(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldMiddleName, v))
}

// Nickname applies equality check predicate on the "nickname" field. It's identical to NicknameEQ.
func Nickname(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldNickname, v))
}

// PreferredUsername applies equality check predicate on the "preferred_username" field. It's identical to PreferredUsernameEQ.
func PreferredUsername(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPreferredUsername, v))
}

// Profile applies equality check predicate on the "profile" field. It's identical to ProfileEQ.
func Profile(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldProfile, v))
}

// Picture applies equality check predicate on the "picture" field. It's identical to PictureEQ.
func Picture(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPicture, v))
}

// Website applies equality check predicate on the "website" field. It's identical to WebsiteEQ.
func Website(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldWebsite, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldEmail, v))
}

// EmailVerified applies equality check predicate on the "email_verified" field. It's identical to EmailVerifiedEQ.
func EmailVerified(v bool) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldEmailVerified, v))
}

// Gender applies equality check predicate on the "gender" field. It's identical to GenderEQ.
func Gender(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldGender, v))
}

// Birthdate applies equality check predicate on the "birthdate" field. It's identical to BirthdateEQ.
func Birthdate(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldBirthdate, v))
}

// Zoneinfo applies equality check predicate on the "zoneinfo" field. It's identical to ZoneinfoEQ.
func Zoneinfo(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldZoneinfo, v))
}

// Locale applies equality check predicate on the "locale" field. It's identical to LocaleEQ.
func Locale(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldLocale, v))
}

// PhoneNumber applies equality check predicate on the "phone_number" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberVerified applies equality check predicate on the "phone_number_verified" field. It's identical to PhoneNumberVerifiedEQ.
func PhoneNumberVerified(v bool) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPhoneNumberVerified, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldAddress, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldUpdatedAt, v))
}

// SubjectEQ applies the EQ predicate on the "subject" field.
func SubjectEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldSubject, v))
}

// SubjectNEQ applies the NEQ predicate on the "subject" field.
func SubjectNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldSubject, v))
}

// SubjectIn applies the In predicate on the "subject" field.
func SubjectIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldSubject, vs...))
}

// SubjectNotIn applies the NotIn predicate on the "subject" field.
func SubjectNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldSubject, vs...))
}

// SubjectGT applies the GT predicate on the "subject" field.
func SubjectGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldSubject, v))
}

// SubjectGTE applies the GTE predicate on the "subject" field.
func SubjectGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldSubject, v))
}

// SubjectLT applies the LT predicate on the "subject" field.
func SubjectLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldSubject, v))
}

// SubjectLTE applies the LTE predicate on the "subject" field.
func SubjectLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldSubject, v))
}

// SubjectContains applies the Contains predicate on the "subject" field.
func SubjectContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldSubject, v))
}

// SubjectHasPrefix applies the HasPrefix predicate on the "subject" field.
func SubjectHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldSubject, v))
}

// SubjectHasSuffix applies the HasSuffix predicate on the "subject" field.
func SubjectHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldSubject, v))
}

// SubjectEqualFold applies the EqualFold predicate on the "subject" field.
func SubjectEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldSubject, v))
}

// SubjectContainsFold applies the ContainsFold predicate on the "subject" field.
func SubjectContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldSubject, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldName, v))
}

// GivenNameEQ applies the EQ predicate on the "given_name" field.
func GivenNameEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldGivenName, v))
}

// GivenNameNEQ applies the NEQ predicate on the "given_name" field.
func GivenNameNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldGivenName, v))
}

// GivenNameIn applies the In predicate on the "given_name" field.
func GivenNameIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldGivenName, vs...))
}

// GivenNameNotIn applies the NotIn predicate on the "given_name" field.
func GivenNameNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldGivenName, vs...))
}

// GivenNameGT applies the GT predicate on the "given_name" field.
func GivenNameGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldGivenName, v))
}

// GivenNameGTE applies the GTE predicate on the "given_name" field.
func GivenNameGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldGivenName, v))
}

// GivenNameLT applies the LT predicate on the "given_name" field.
func GivenNameLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldGivenName, v))
}

// GivenNameLTE applies the LTE predicate on the "given_name" field.
func GivenNameLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldGivenName, v))
}

// GivenNameContains applies the Contains predicate on the "given_name" field.
func GivenNameContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldGivenName, v))
}

// GivenNameHasPrefix applies the HasPrefix predicate on the "given_name" field.
func GivenNameHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldGivenName, v))
}

// GivenNameHasSuffix applies the HasSuffix predicate on the "given_name" field.
func GivenNameHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldGivenName, v))
}

// GivenNameIsNil applies the IsNil predicate on the "given_name" field.
func GivenNameIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldGivenName))
}

// GivenNameNotNil applies the NotNil predicate on the "given_name" field.
func GivenNameNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldGivenName))
}

// GivenNameEqualFold applies the EqualFold predicate on the "given_name" field.
func GivenNameEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldGivenName, v))
}

// GivenNameContainsFold applies the ContainsFold predicate on the "given_name" field.
func GivenNameContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldGivenName, v))
}

// FamilyNameEQ applies the EQ predicate on the "family_name" field.
func FamilyNameEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldFamilyName, v))
}

// FamilyNameNEQ applies the NEQ predicate on the "family_name" field.
func FamilyNameNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldFamilyName, v))
}

// FamilyNameIn applies the In predicate on the "family_name" field.
func FamilyNameIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldFamilyName, vs...))
}

// FamilyNameNotIn applies the NotIn predicate on the "family_name" field.
func FamilyNameNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldFamilyName, vs...))
}

// FamilyNameGT applies the GT predicate on the "family_name" field.
func FamilyNameGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldFamilyName, v))
}

// FamilyNameGTE applies the GTE predicate on the "family_name" field.
func FamilyNameGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldFamilyName, v))
}

// FamilyNameLT applies the LT predicate on the "family_name" field.
func FamilyNameLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldFamilyName, v))
}

// FamilyNameLTE applies the LTE predicate on the "family_name" field.
func FamilyNameLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldFamilyName, v))
}

// FamilyNameContains applies the Contains predicate on the "family_name" field.
func FamilyNameContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldFamilyName, v))
}

// FamilyNameHasPrefix applies the HasPrefix predicate on the "family_name" field.
func FamilyNameHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldFamilyName, v))
}

// FamilyNameHasSuffix applies the HasSuffix predicate on the "family_name" field.
func FamilyNameHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldFamilyName, v))
}

// FamilyNameIsNil applies the IsNil predicate on the "family_name" field.
func FamilyNameIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldFamilyName))
}

// FamilyNameNotNil applies the NotNil predicate on the "family_name" field.
func FamilyNameNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldFamilyName))
}

// FamilyNameEqualFold applies the EqualFold predicate on the "family_name" field.
func FamilyNameEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldFamilyName, v))
}

// FamilyNameContainsFold applies the ContainsFold predicate on the "family_name" field.
func FamilyNameContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldFamilyName, v))
}

// MiddleNameEQ applies the EQ predicate on the "middle_name" field.
func MiddleNameEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldMiddleName, v))
}

// MiddleNameNEQ applies the NEQ predicate on the "middle_name" field.
func MiddleNameNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldMiddleName, v))
}

// MiddleNameIn applies the In predicate on the "middle_name" field.
func MiddleNameIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldMiddleName, vs...))
}

// MiddleNameNotIn applies the NotIn predicate on the "middle_name" field.
func MiddleNameNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldMiddleName, vs...))
}

// MiddleNameGT applies the GT predicate on the "middle_name" field.
func MiddleNameGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldMiddleName, v))
}

// MiddleNameGTE applies the GTE predicate on the "middle_name" field.
func MiddleNameGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldMiddleName, v))
}

// MiddleNameLT applies the LT predicate on the "middle_name" field.
func MiddleNameLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldMiddleName, v))
}

// MiddleNameLTE applies the LTE predicate on the "middle_name" field.
func MiddleNameLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldMiddleName, v))
}

// MiddleNameContains applies the Contains predicate on the "middle_name" field.
func MiddleNameContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldMiddleName, v))
}

// MiddleNameHasPrefix applies the HasPrefix predicate on the "middle_name" field.
func MiddleNameHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldMiddleName, v))
}

// MiddleNameHasSuffix applies the HasSuffix predicate on the "middle_name" field.
func MiddleNameHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldMiddleName, v))
}

// MiddleNameIsNil applies the IsNil predicate on the "middle_name" field.
func MiddleNameIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldMiddleName))
}

// MiddleNameNotNil applies the NotNil predicate on the "middle_name" field.
func MiddleNameNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldMiddleName))
}

// MiddleNameEqualFold applies the EqualFold predicate on the "middle_name" field.
func MiddleNameEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldMiddleName, v))
}

// MiddleNameContainsFold applies the ContainsFold predicate on the "middle_name" field.
func MiddleNameContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldMiddleName, v))
}

// NicknameEQ applies the EQ predicate on the "nickname" field.
func NicknameEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldNickname, v))
}

// NicknameNEQ applies the NEQ predicate on the "nickname" field.
func NicknameNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldNickname, v))
}

// NicknameIn applies the In predicate on the "nickname" field.
func NicknameIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldNickname, vs...))
}

// NicknameNotIn applies the NotIn predicate on the "nickname" field.
func NicknameNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldNickname, vs...))
}

// NicknameGT applies the GT predicate on the "nickname" field.
func NicknameGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldNickname, v))
}

// NicknameGTE applies the GTE predicate on the "nickname" field.
func NicknameGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldNickname, v))
}

// NicknameLT applies the LT predicate on the "nickname" field.
func NicknameLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldNickname, v))
}

// NicknameLTE applies the LTE predicate on the "nickname" field.
func NicknameLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldNickname, v))
}

// NicknameContains applies the Contains predicate on the "nickname" field.
func NicknameContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldNickname, v))
}

// NicknameHasPrefix applies the HasPrefix predicate on the "nickname" field.
func NicknameHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldNickname, v))
}

// NicknameHasSuffix applies the HasSuffix predicate on the "nickname" field.
func NicknameHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldNickname, v))
}

// NicknameIsNil applies the IsNil predicate on the "nickname" field.
func NicknameIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldNickname))
}

// NicknameNotNil applies the NotNil predicate on the "nickname" field.
func NicknameNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldNickname))
}

// NicknameEqualFold applies the EqualFold predicate on the "nickname" field.
func NicknameEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldNickname, v))
}

// NicknameContainsFold applies the ContainsFold predicate on the "nickname" field.
func NicknameContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldNickname, v))
}

// PreferredUsernameEQ applies the EQ predicate on the "preferred_username" field.
func PreferredUsernameEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPreferredUsername, v))
}

// PreferredUsernameNEQ applies the NEQ predicate on the "preferred_username" field.
func PreferredUsernameNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldPreferredUsername, v))
}

// PreferredUsernameIn applies the In predicate on the "preferred_username" field.
func PreferredUsernameIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldPreferredUsername, vs...))
}

// PreferredUsernameNotIn applies the NotIn predicate on the "preferred_username" field.
func PreferredUsernameNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldPreferredUsername, vs...))
}

// PreferredUsernameGT applies the GT predicate on the "preferred_username" field.
func PreferredUsernameGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldPreferredUsername, v))
}

// PreferredUsernameGTE applies the GTE predicate on the "preferred_username" field.
func PreferredUsernameGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldPreferredUsername, v))
}

// PreferredUsernameLT applies the LT predicate on the "preferred_username" field.
func PreferredUsernameLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldPreferredUsername, v))
}

// PreferredUsernameLTE applies the LTE predicate on the "preferred_username" field.
func PreferredUsernameLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldPreferredUsername, v))
}

// PreferredUsernameContains applies the Contains predicate on the "preferred_username" field.
func PreferredUsernameContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldPreferredUsername, v))
}

// PreferredUsernameHasPrefix applies the HasPrefix predicate on the "preferred_username" field.
func PreferredUsernameHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldPreferredUsername, v))
}

// PreferredUsernameHasSuffix applies the HasSuffix predicate on the "preferred_username" field.
func PreferredUsernameHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldPreferredUsername, v))
}

// PreferredUsernameIsNil applies the IsNil predicate on the "preferred_username" field.
func PreferredUsernameIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldPreferredUsername))
}

// PreferredUsernameNotNil applies the NotNil predicate on the "preferred_username" field.
func PreferredUsernameNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldPreferredUsername))
}

// PreferredUsernameEqualFold applies the EqualFold predicate on the "preferred_username" field.
func PreferredUsernameEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldPreferredUsername, v))
}

// PreferredUsernameContainsFold applies the ContainsFold predicate on the "preferred_username" field.
func PreferredUsernameContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldPreferredUsername, v))
}

// ProfileEQ applies the EQ predicate on the "profile" field.
func ProfileEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldProfile, v))
}

// ProfileNEQ applies the NEQ predicate on the "profile" field.
func ProfileNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldProfile, v))
}

// ProfileIn applies the In predicate on the "profile" field.
func ProfileIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldProfile, vs...))
}

// ProfileNotIn applies the NotIn predicate on the "profile" field.
func ProfileNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldProfile, vs...))
}

// ProfileGT applies the GT predicate on the "profile" field.
func ProfileGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldProfile, v))
}

// ProfileGTE applies the GTE predicate on the "profile" field.
func ProfileGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldProfile, v))
}

// ProfileLT applies the LT predicate on the "profile" field.
func ProfileLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldProfile, v))
}

// ProfileLTE applies the LTE predicate on the "profile" field.
func ProfileLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldProfile, v))
}

// ProfileContains applies the Contains predicate on the "profile" field.
func ProfileContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldProfile, v))
}

// ProfileHasPrefix applies the HasPrefix predicate on the "profile" field.
func ProfileHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldProfile, v))
}

// ProfileHasSuffix applies the HasSuffix predicate on the "profile" field.
func ProfileHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldProfile, v))
}

// ProfileIsNil applies the IsNil predicate on the "profile" field.
func ProfileIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldProfile))
}

// ProfileNotNil applies the NotNil predicate on the "profile" field.
func ProfileNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldProfile))
}

// ProfileEqualFold applies the EqualFold predicate on the "profile" field.
func ProfileEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldProfile, v))
}

// ProfileContainsFold applies the ContainsFold predicate on the "profile" field.
func ProfileContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldProfile, v))
}

// PictureEQ applies the EQ predicate on the "picture" field.
func PictureEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPicture, v))
}

// PictureNEQ applies the NEQ predicate on the "picture" field.
func PictureNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldPicture, v))
}

// PictureIn applies the In predicate on the "picture" field.
func PictureIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldPicture, vs...))
}

// PictureNotIn applies the NotIn predicate on the "picture" field.
func PictureNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldPicture, vs...))
}

// PictureGT applies the GT predicate on the "picture" field.
func PictureGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldPicture, v))
}

// PictureGTE applies the GTE predicate on the "picture" field.
func PictureGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldPicture, v))
}

// PictureLT applies the LT predicate on the "picture" field.
func PictureLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldPicture, v))
}

// PictureLTE applies the LTE predicate on the "picture" field.
func PictureLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldPicture, v))
}

// PictureContains applies the Contains predicate on the "picture" field.
func PictureContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldPicture, v))
}

// PictureHasPrefix applies the HasPrefix predicate on the "picture" field.
func PictureHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldPicture, v))
}

// PictureHasSuffix applies the HasSuffix predicate on the "picture" field.
func PictureHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldPicture, v))
}

// PictureIsNil applies the IsNil predicate on the "picture" field.
func PictureIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldPicture))
}

// PictureNotNil applies the NotNil predicate on the "picture" field.
func PictureNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldPicture))
}

// PictureEqualFold applies the EqualFold predicate on the "picture" field.
func PictureEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldPicture, v))
}

// PictureContainsFold applies the ContainsFold predicate on the "picture" field.
func PictureContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldPicture, v))
}

// WebsiteEQ applies the EQ predicate on the "website" field.
func WebsiteEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldWebsite, v))
}

// WebsiteNEQ applies the NEQ predicate on the "website" field.
func WebsiteNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldWebsite, v))
}

// WebsiteIn applies the In predicate on the "website" field.
func WebsiteIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldWebsite, vs...))
}

// WebsiteNotIn applies the NotIn predicate on the "website" field.
func WebsiteNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldWebsite, vs...))
}

// WebsiteGT applies the GT predicate on the "website" field.
func WebsiteGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldWebsite, v))
}

// WebsiteGTE applies the GTE predicate on the "website" field.
func WebsiteGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldWebsite, v))
}

// WebsiteLT applies the LT predicate on the "website" field.
func WebsiteLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldWebsite, v))
}

// WebsiteLTE applies the LTE predicate on the "website" field.
func WebsiteLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldWebsite, v))
}

// WebsiteContains applies the Contains predicate on the "website" field.
func WebsiteContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldWebsite, v))
}

// WebsiteHasPrefix applies the HasPrefix predicate on the "website" field.
func WebsiteHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldWebsite, v))
}

// WebsiteHasSuffix applies the HasSuffix predicate on the "website" field.
func WebsiteHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldWebsite, v))
}

// WebsiteIsNil applies the IsNil predicate on the "website" field.
func WebsiteIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldWebsite))
}

// WebsiteNotNil applies the NotNil predicate on the "website" field.
func WebsiteNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldWebsite))
}

// WebsiteEqualFold applies the EqualFold predicate on the "website" field.
func WebsiteEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldWebsite, v))
}

// WebsiteContainsFold applies the ContainsFold predicate on the "website" field.
func WebsiteContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldWebsite, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailIsNil applies the IsNil predicate on the "email" field.
func EmailIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldEmail))
}

// EmailNotNil applies the NotNil predicate on the "email" field.
func EmailNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldEmail))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldEmail, v))
}

// EmailVerifiedEQ applies the EQ predicate on the "email_verified" field.
func EmailVerifiedEQ(v bool) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldEmailVerified, v))
}

// EmailVerifiedNEQ applies the NEQ predicate on the "email_verified" field.
func EmailVerifiedNEQ(v bool) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldEmailVerified, v))
}

// EmailVerifiedIsNil applies the IsNil predicate on the "email_verified" field.
func EmailVerifiedIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldEmailVerified))
}

// EmailVerifiedNotNil applies the NotNil predicate on the "email_verified" field.
func EmailVerifiedNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldEmailVerified))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldGender, vs...))
}

// GenderGT applies the GT predicate on the "gender" field.
func GenderGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldGender, v))
}

// GenderGTE applies the GTE predicate on the "gender" field.
func GenderGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldGender, v))
}

// GenderLT applies the LT predicate on the "gender" field.
func GenderLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldGender, v))
}

// GenderLTE applies the LTE predicate on the "gender" field.
func GenderLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldGender, v))
}

// GenderContains applies the Contains predicate on the "gender" field.
func GenderContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldGender, v))
}

// GenderHasPrefix applies the HasPrefix predicate on the "gender" field.
func GenderHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldGender, v))
}

// GenderHasSuffix applies the HasSuffix predicate on the "gender" field.
func GenderHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldGender, v))
}

// GenderIsNil applies the IsNil predicate on the "gender" field.
func GenderIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldGender))
}

// GenderNotNil applies the NotNil predicate on the "gender" field.
func GenderNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldGender))
}

// GenderEqualFold applies the EqualFold predicate on the "gender" field.
func GenderEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldGender, v))
}

// GenderContainsFold applies the ContainsFold predicate on the "gender" field.
func GenderContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldGender, v))
}

// BirthdateEQ applies the EQ predicate on the "birthdate" field.
func BirthdateEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldBirthdate, v))
}

// BirthdateNEQ applies the NEQ predicate on the "birthdate" field.
func BirthdateNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldBirthdate, v))
}

// BirthdateIn applies the In predicate on the "birthdate" field.
func BirthdateIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldBirthdate, vs...))
}

// BirthdateNotIn applies the NotIn predicate on the "birthdate" field.
func BirthdateNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldBirthdate, vs...))
}

// BirthdateGT applies the GT predicate on the "birthdate" field.
func BirthdateGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldBirthdate, v))
}

// BirthdateGTE applies the GTE predicate on the "birthdate" field.
func BirthdateGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldBirthdate, v))
}

// BirthdateLT applies the LT predicate on the "birthdate" field.
func BirthdateLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldBirthdate, v))
}

// BirthdateLTE applies the LTE predicate on the "birthdate" field.
func BirthdateLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldBirthdate, v))
}

// BirthdateContains applies the Contains predicate on the "birthdate" field.
func BirthdateContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldBirthdate, v))
}

// BirthdateHasPrefix applies the HasPrefix predicate on the "birthdate" field.
func BirthdateHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldBirthdate, v))
}

// BirthdateHasSuffix applies the HasSuffix predicate on the "birthdate" field.
func BirthdateHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldBirthdate, v))
}

// BirthdateIsNil applies the IsNil predicate on the "birthdate" field.
func BirthdateIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldBirthdate))
}

// BirthdateNotNil applies the NotNil predicate on the "birthdate" field.
func BirthdateNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldBirthdate))
}

// BirthdateEqualFold applies the EqualFold predicate on the "birthdate" field.
func BirthdateEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldBirthdate, v))
}

// BirthdateContainsFold applies the ContainsFold predicate on the "birthdate" field.
func BirthdateContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldBirthdate, v))
}

// ZoneinfoEQ applies the EQ predicate on the "zoneinfo" field.
func ZoneinfoEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldZoneinfo, v))
}

// ZoneinfoNEQ applies the NEQ predicate on the "zoneinfo" field.
func ZoneinfoNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldZoneinfo, v))
}

// ZoneinfoIn applies the In predicate on the "zoneinfo" field.
func ZoneinfoIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldZoneinfo, vs...))
}

// ZoneinfoNotIn applies the NotIn predicate on the "zoneinfo" field.
func ZoneinfoNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldZoneinfo, vs...))
}

// ZoneinfoGT applies the GT predicate on the "zoneinfo" field.
func ZoneinfoGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldZoneinfo, v))
}

// ZoneinfoGTE applies the GTE predicate on the "zoneinfo" field.
func ZoneinfoGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldZoneinfo, v))
}

// ZoneinfoLT applies the LT predicate on the "zoneinfo" field.
func ZoneinfoLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldZoneinfo, v))
}

// ZoneinfoLTE applies the LTE predicate on the "zoneinfo" field.
func ZoneinfoLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldZoneinfo, v))
}

// ZoneinfoContains applies the Contains predicate on the "zoneinfo" field.
func ZoneinfoContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldZoneinfo, v))
}

// ZoneinfoHasPrefix applies the HasPrefix predicate on the "zoneinfo" field.
func ZoneinfoHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldZoneinfo, v))
}

// ZoneinfoHasSuffix applies the HasSuffix predicate on the "zoneinfo" field.
func ZoneinfoHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldZoneinfo, v))
}

// ZoneinfoIsNil applies the IsNil predicate on the "zoneinfo" field.
func ZoneinfoIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldZoneinfo))
}

// ZoneinfoNotNil applies the NotNil predicate on the "zoneinfo" field.
func ZoneinfoNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldZoneinfo))
}

// ZoneinfoEqualFold applies the EqualFold predicate on the "zoneinfo" field.
func ZoneinfoEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldZoneinfo, v))
}

// ZoneinfoContainsFold applies the ContainsFold predicate on the "zoneinfo" field.
func ZoneinfoContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldZoneinfo, v))
}

// LocaleEQ applies the EQ predicate on the "locale" field.
func LocaleEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldLocale, v))
}

// LocaleNEQ applies the NEQ predicate on the "locale" field.
func LocaleNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldLocale, v))
}

// LocaleIn applies the In predicate on the "locale" field.
func LocaleIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldLocale, vs...))
}

// LocaleNotIn applies the NotIn predicate on the "locale" field.
func LocaleNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldLocale, vs...))
}

// LocaleGT applies the GT predicate on the "locale" field.
func LocaleGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldLocale, v))
}

// LocaleGTE applies the GTE predicate on the "locale" field.
func LocaleGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldLocale, v))
}

// LocaleLT applies the LT predicate on the "locale" field.
func LocaleLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldLocale, v))
}

// LocaleLTE applies the LTE predicate on the "locale" field.
func LocaleLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldLocale, v))
}

// LocaleContains applies the Contains predicate on the "locale" field.
func LocaleContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldLocale, v))
}

// LocaleHasPrefix applies the HasPrefix predicate on the "locale" field.
func LocaleHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldLocale, v))
}

// LocaleHasSuffix applies the HasSuffix predicate on the "locale" field.
func LocaleHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldLocale, v))
}

// LocaleIsNil applies the IsNil predicate on the "locale" field.
func LocaleIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldLocale))
}

// LocaleNotNil applies the NotNil predicate on the "locale" field.
func LocaleNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldLocale))
}

// LocaleEqualFold applies the EqualFold predicate on the "locale" field.
func LocaleEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldLocale, v))
}

// LocaleContainsFold applies the ContainsFold predicate on the "locale" field.
func LocaleContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldLocale, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phone_number" field.
func PhoneNumberEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phone_number" field.
func PhoneNumberNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phone_number" field.
func PhoneNumberIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phone_number" field.
func PhoneNumberNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phone_number" field.
func PhoneNumberGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phone_number" field.
func PhoneNumberGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phone_number" field.
func PhoneNumberLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phone_number" field.
func PhoneNumberLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phone_number" field.
func PhoneNumberContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phone_number" field.
func PhoneNumberHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phone_number" field.
func PhoneNumberHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberIsNil applies the IsNil predicate on the "phone_number" field.
func PhoneNumberIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldPhoneNumber))
}

// PhoneNumberNotNil applies the NotNil predicate on the "phone_number" field.
func PhoneNumberNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldPhoneNumber))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phone_number" field.
func PhoneNumberEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phone_number" field.
func PhoneNumberContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// PhoneNumberVerifiedEQ applies the EQ predicate on the "phone_number_verified" field.
func PhoneNumberVerifiedEQ(v bool) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldPhoneNumberVerified, v))
}

// PhoneNumberVerifiedNEQ applies the NEQ predicate on the "phone_number_verified" field.
func PhoneNumberVerifiedNEQ(v bool) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldPhoneNumberVerified, v))
}

// PhoneNumberVerifiedIsNil applies the IsNil predicate on the "phone_number_verified" field.
func PhoneNumberVerifiedIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldPhoneNumberVerified))
}

// PhoneNumberVerifiedNotNil applies the NotNil predicate on the "phone_number_verified" field.
func PhoneNumberVerifiedNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldPhoneNumberVerified))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressIsNil applies the IsNil predicate on the "address" field.
func AddressIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldAddress))
}

// AddressNotNil applies the NotNil predicate on the "address" field.
func AddressNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldAddress))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldContainsFold(FieldAddress, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.StandardClaims {
	return predicate.StandardClaims(sql.FieldNotNull(FieldUpdatedAt))
}

// HasUser applies the HasEdge predicate on the "user" edge.
func HasUser() predicate.StandardClaims {
	return predicate.StandardClaims(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, UserTable, UserColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUserWith applies the HasEdge predicate on the "user" edge with a given conditions (other predicates).
func HasUserWith(preds ...predicate.User) predicate.StandardClaims {
	return predicate.StandardClaims(func(s *sql.Selector) {
		step := newUserStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.StandardClaims) predicate.StandardClaims {
	return predicate.StandardClaims(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.StandardClaims) predicate.StandardClaims {
	return predicate.StandardClaims(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.StandardClaims) predicate.StandardClaims {
	return predicate.StandardClaims(sql.NotPredicates(p))
}
