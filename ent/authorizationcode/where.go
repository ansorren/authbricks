// Code generated by ent, DO NOT EDIT.

package authorizationcode

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"go.authbricks.com/bricks/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldID, id))
}

// ClientName applies equality check predicate on the "client_name" field. It's identical to ClientNameEQ.
func ClientName(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldClientName, v))
}

// CodeChallenge applies equality check predicate on the "code_challenge" field. It's identical to CodeChallengeEQ.
func CodeChallenge(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldCodeChallenge, v))
}

// CodeChallengeMethod applies equality check predicate on the "code_challenge_method" field. It's identical to CodeChallengeMethodEQ.
func CodeChallengeMethod(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldCodeChallengeMethod, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldCreatedAt, v))
}

// AuthTime applies equality check predicate on the "auth_time" field. It's identical to AuthTimeEQ.
func AuthTime(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldAuthTime, v))
}

// RedirectURI applies equality check predicate on the "redirect_uri" field. It's identical to RedirectURIEQ.
func RedirectURI(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldRedirectURI, v))
}

// Nonce applies equality check predicate on the "nonce" field. It's identical to NonceEQ.
func Nonce(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldNonce, v))
}

// ServerName applies equality check predicate on the "server_name" field. It's identical to ServerNameEQ.
func ServerName(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldServerName, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldState, v))
}

// Subject applies equality check predicate on the "subject" field. It's identical to SubjectEQ.
func Subject(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldSubject, v))
}

// GrantedScopes applies equality check predicate on the "granted_scopes" field. It's identical to GrantedScopesEQ.
func GrantedScopes(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldGrantedScopes, v))
}

// ClientNameEQ applies the EQ predicate on the "client_name" field.
func ClientNameEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldClientName, v))
}

// ClientNameNEQ applies the NEQ predicate on the "client_name" field.
func ClientNameNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldClientName, v))
}

// ClientNameIn applies the In predicate on the "client_name" field.
func ClientNameIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldClientName, vs...))
}

// ClientNameNotIn applies the NotIn predicate on the "client_name" field.
func ClientNameNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldClientName, vs...))
}

// ClientNameGT applies the GT predicate on the "client_name" field.
func ClientNameGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldClientName, v))
}

// ClientNameGTE applies the GTE predicate on the "client_name" field.
func ClientNameGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldClientName, v))
}

// ClientNameLT applies the LT predicate on the "client_name" field.
func ClientNameLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldClientName, v))
}

// ClientNameLTE applies the LTE predicate on the "client_name" field.
func ClientNameLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldClientName, v))
}

// ClientNameContains applies the Contains predicate on the "client_name" field.
func ClientNameContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldClientName, v))
}

// ClientNameHasPrefix applies the HasPrefix predicate on the "client_name" field.
func ClientNameHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldClientName, v))
}

// ClientNameHasSuffix applies the HasSuffix predicate on the "client_name" field.
func ClientNameHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldClientName, v))
}

// ClientNameEqualFold applies the EqualFold predicate on the "client_name" field.
func ClientNameEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldClientName, v))
}

// ClientNameContainsFold applies the ContainsFold predicate on the "client_name" field.
func ClientNameContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldClientName, v))
}

// CodeChallengeEQ applies the EQ predicate on the "code_challenge" field.
func CodeChallengeEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldCodeChallenge, v))
}

// CodeChallengeNEQ applies the NEQ predicate on the "code_challenge" field.
func CodeChallengeNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldCodeChallenge, v))
}

// CodeChallengeIn applies the In predicate on the "code_challenge" field.
func CodeChallengeIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldCodeChallenge, vs...))
}

// CodeChallengeNotIn applies the NotIn predicate on the "code_challenge" field.
func CodeChallengeNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldCodeChallenge, vs...))
}

// CodeChallengeGT applies the GT predicate on the "code_challenge" field.
func CodeChallengeGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldCodeChallenge, v))
}

// CodeChallengeGTE applies the GTE predicate on the "code_challenge" field.
func CodeChallengeGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldCodeChallenge, v))
}

// CodeChallengeLT applies the LT predicate on the "code_challenge" field.
func CodeChallengeLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldCodeChallenge, v))
}

// CodeChallengeLTE applies the LTE predicate on the "code_challenge" field.
func CodeChallengeLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldCodeChallenge, v))
}

// CodeChallengeContains applies the Contains predicate on the "code_challenge" field.
func CodeChallengeContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldCodeChallenge, v))
}

// CodeChallengeHasPrefix applies the HasPrefix predicate on the "code_challenge" field.
func CodeChallengeHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldCodeChallenge, v))
}

// CodeChallengeHasSuffix applies the HasSuffix predicate on the "code_challenge" field.
func CodeChallengeHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldCodeChallenge, v))
}

// CodeChallengeEqualFold applies the EqualFold predicate on the "code_challenge" field.
func CodeChallengeEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldCodeChallenge, v))
}

// CodeChallengeContainsFold applies the ContainsFold predicate on the "code_challenge" field.
func CodeChallengeContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldCodeChallenge, v))
}

// CodeChallengeMethodEQ applies the EQ predicate on the "code_challenge_method" field.
func CodeChallengeMethodEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodNEQ applies the NEQ predicate on the "code_challenge_method" field.
func CodeChallengeMethodNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodIn applies the In predicate on the "code_challenge_method" field.
func CodeChallengeMethodIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldCodeChallengeMethod, vs...))
}

// CodeChallengeMethodNotIn applies the NotIn predicate on the "code_challenge_method" field.
func CodeChallengeMethodNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldCodeChallengeMethod, vs...))
}

// CodeChallengeMethodGT applies the GT predicate on the "code_challenge_method" field.
func CodeChallengeMethodGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodGTE applies the GTE predicate on the "code_challenge_method" field.
func CodeChallengeMethodGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodLT applies the LT predicate on the "code_challenge_method" field.
func CodeChallengeMethodLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodLTE applies the LTE predicate on the "code_challenge_method" field.
func CodeChallengeMethodLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodContains applies the Contains predicate on the "code_challenge_method" field.
func CodeChallengeMethodContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodHasPrefix applies the HasPrefix predicate on the "code_challenge_method" field.
func CodeChallengeMethodHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodHasSuffix applies the HasSuffix predicate on the "code_challenge_method" field.
func CodeChallengeMethodHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodEqualFold applies the EqualFold predicate on the "code_challenge_method" field.
func CodeChallengeMethodEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldCodeChallengeMethod, v))
}

// CodeChallengeMethodContainsFold applies the ContainsFold predicate on the "code_challenge_method" field.
func CodeChallengeMethodContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldCodeChallengeMethod, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldCreatedAt, v))
}

// AuthTimeEQ applies the EQ predicate on the "auth_time" field.
func AuthTimeEQ(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldAuthTime, v))
}

// AuthTimeNEQ applies the NEQ predicate on the "auth_time" field.
func AuthTimeNEQ(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldAuthTime, v))
}

// AuthTimeIn applies the In predicate on the "auth_time" field.
func AuthTimeIn(vs ...time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldAuthTime, vs...))
}

// AuthTimeNotIn applies the NotIn predicate on the "auth_time" field.
func AuthTimeNotIn(vs ...time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldAuthTime, vs...))
}

// AuthTimeGT applies the GT predicate on the "auth_time" field.
func AuthTimeGT(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldAuthTime, v))
}

// AuthTimeGTE applies the GTE predicate on the "auth_time" field.
func AuthTimeGTE(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldAuthTime, v))
}

// AuthTimeLT applies the LT predicate on the "auth_time" field.
func AuthTimeLT(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldAuthTime, v))
}

// AuthTimeLTE applies the LTE predicate on the "auth_time" field.
func AuthTimeLTE(v time.Time) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldAuthTime, v))
}

// RedirectURIEQ applies the EQ predicate on the "redirect_uri" field.
func RedirectURIEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldRedirectURI, v))
}

// RedirectURINEQ applies the NEQ predicate on the "redirect_uri" field.
func RedirectURINEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldRedirectURI, v))
}

// RedirectURIIn applies the In predicate on the "redirect_uri" field.
func RedirectURIIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldRedirectURI, vs...))
}

// RedirectURINotIn applies the NotIn predicate on the "redirect_uri" field.
func RedirectURINotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldRedirectURI, vs...))
}

// RedirectURIGT applies the GT predicate on the "redirect_uri" field.
func RedirectURIGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldRedirectURI, v))
}

// RedirectURIGTE applies the GTE predicate on the "redirect_uri" field.
func RedirectURIGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldRedirectURI, v))
}

// RedirectURILT applies the LT predicate on the "redirect_uri" field.
func RedirectURILT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldRedirectURI, v))
}

// RedirectURILTE applies the LTE predicate on the "redirect_uri" field.
func RedirectURILTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldRedirectURI, v))
}

// RedirectURIContains applies the Contains predicate on the "redirect_uri" field.
func RedirectURIContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldRedirectURI, v))
}

// RedirectURIHasPrefix applies the HasPrefix predicate on the "redirect_uri" field.
func RedirectURIHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldRedirectURI, v))
}

// RedirectURIHasSuffix applies the HasSuffix predicate on the "redirect_uri" field.
func RedirectURIHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldRedirectURI, v))
}

// RedirectURIEqualFold applies the EqualFold predicate on the "redirect_uri" field.
func RedirectURIEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldRedirectURI, v))
}

// RedirectURIContainsFold applies the ContainsFold predicate on the "redirect_uri" field.
func RedirectURIContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldRedirectURI, v))
}

// NonceEQ applies the EQ predicate on the "nonce" field.
func NonceEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldNonce, v))
}

// NonceNEQ applies the NEQ predicate on the "nonce" field.
func NonceNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldNonce, v))
}

// NonceIn applies the In predicate on the "nonce" field.
func NonceIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldNonce, vs...))
}

// NonceNotIn applies the NotIn predicate on the "nonce" field.
func NonceNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldNonce, vs...))
}

// NonceGT applies the GT predicate on the "nonce" field.
func NonceGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldNonce, v))
}

// NonceGTE applies the GTE predicate on the "nonce" field.
func NonceGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldNonce, v))
}

// NonceLT applies the LT predicate on the "nonce" field.
func NonceLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldNonce, v))
}

// NonceLTE applies the LTE predicate on the "nonce" field.
func NonceLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldNonce, v))
}

// NonceContains applies the Contains predicate on the "nonce" field.
func NonceContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldNonce, v))
}

// NonceHasPrefix applies the HasPrefix predicate on the "nonce" field.
func NonceHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldNonce, v))
}

// NonceHasSuffix applies the HasSuffix predicate on the "nonce" field.
func NonceHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldNonce, v))
}

// NonceEqualFold applies the EqualFold predicate on the "nonce" field.
func NonceEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldNonce, v))
}

// NonceContainsFold applies the ContainsFold predicate on the "nonce" field.
func NonceContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldNonce, v))
}

// ServerNameEQ applies the EQ predicate on the "server_name" field.
func ServerNameEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldServerName, v))
}

// ServerNameNEQ applies the NEQ predicate on the "server_name" field.
func ServerNameNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldServerName, v))
}

// ServerNameIn applies the In predicate on the "server_name" field.
func ServerNameIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldServerName, vs...))
}

// ServerNameNotIn applies the NotIn predicate on the "server_name" field.
func ServerNameNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldServerName, vs...))
}

// ServerNameGT applies the GT predicate on the "server_name" field.
func ServerNameGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldServerName, v))
}

// ServerNameGTE applies the GTE predicate on the "server_name" field.
func ServerNameGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldServerName, v))
}

// ServerNameLT applies the LT predicate on the "server_name" field.
func ServerNameLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldServerName, v))
}

// ServerNameLTE applies the LTE predicate on the "server_name" field.
func ServerNameLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldServerName, v))
}

// ServerNameContains applies the Contains predicate on the "server_name" field.
func ServerNameContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldServerName, v))
}

// ServerNameHasPrefix applies the HasPrefix predicate on the "server_name" field.
func ServerNameHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldServerName, v))
}

// ServerNameHasSuffix applies the HasSuffix predicate on the "server_name" field.
func ServerNameHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldServerName, v))
}

// ServerNameEqualFold applies the EqualFold predicate on the "server_name" field.
func ServerNameEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldServerName, v))
}

// ServerNameContainsFold applies the ContainsFold predicate on the "server_name" field.
func ServerNameContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldServerName, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldState, v))
}

// SubjectEQ applies the EQ predicate on the "subject" field.
func SubjectEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldSubject, v))
}

// SubjectNEQ applies the NEQ predicate on the "subject" field.
func SubjectNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldSubject, v))
}

// SubjectIn applies the In predicate on the "subject" field.
func SubjectIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldSubject, vs...))
}

// SubjectNotIn applies the NotIn predicate on the "subject" field.
func SubjectNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldSubject, vs...))
}

// SubjectGT applies the GT predicate on the "subject" field.
func SubjectGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldSubject, v))
}

// SubjectGTE applies the GTE predicate on the "subject" field.
func SubjectGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldSubject, v))
}

// SubjectLT applies the LT predicate on the "subject" field.
func SubjectLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldSubject, v))
}

// SubjectLTE applies the LTE predicate on the "subject" field.
func SubjectLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldSubject, v))
}

// SubjectContains applies the Contains predicate on the "subject" field.
func SubjectContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldSubject, v))
}

// SubjectHasPrefix applies the HasPrefix predicate on the "subject" field.
func SubjectHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldSubject, v))
}

// SubjectHasSuffix applies the HasSuffix predicate on the "subject" field.
func SubjectHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldSubject, v))
}

// SubjectEqualFold applies the EqualFold predicate on the "subject" field.
func SubjectEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldSubject, v))
}

// SubjectContainsFold applies the ContainsFold predicate on the "subject" field.
func SubjectContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldSubject, v))
}

// GrantedScopesEQ applies the EQ predicate on the "granted_scopes" field.
func GrantedScopesEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEQ(FieldGrantedScopes, v))
}

// GrantedScopesNEQ applies the NEQ predicate on the "granted_scopes" field.
func GrantedScopesNEQ(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNEQ(FieldGrantedScopes, v))
}

// GrantedScopesIn applies the In predicate on the "granted_scopes" field.
func GrantedScopesIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldIn(FieldGrantedScopes, vs...))
}

// GrantedScopesNotIn applies the NotIn predicate on the "granted_scopes" field.
func GrantedScopesNotIn(vs ...string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldNotIn(FieldGrantedScopes, vs...))
}

// GrantedScopesGT applies the GT predicate on the "granted_scopes" field.
func GrantedScopesGT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGT(FieldGrantedScopes, v))
}

// GrantedScopesGTE applies the GTE predicate on the "granted_scopes" field.
func GrantedScopesGTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldGTE(FieldGrantedScopes, v))
}

// GrantedScopesLT applies the LT predicate on the "granted_scopes" field.
func GrantedScopesLT(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLT(FieldGrantedScopes, v))
}

// GrantedScopesLTE applies the LTE predicate on the "granted_scopes" field.
func GrantedScopesLTE(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldLTE(FieldGrantedScopes, v))
}

// GrantedScopesContains applies the Contains predicate on the "granted_scopes" field.
func GrantedScopesContains(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContains(FieldGrantedScopes, v))
}

// GrantedScopesHasPrefix applies the HasPrefix predicate on the "granted_scopes" field.
func GrantedScopesHasPrefix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasPrefix(FieldGrantedScopes, v))
}

// GrantedScopesHasSuffix applies the HasSuffix predicate on the "granted_scopes" field.
func GrantedScopesHasSuffix(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldHasSuffix(FieldGrantedScopes, v))
}

// GrantedScopesEqualFold applies the EqualFold predicate on the "granted_scopes" field.
func GrantedScopesEqualFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldEqualFold(FieldGrantedScopes, v))
}

// GrantedScopesContainsFold applies the ContainsFold predicate on the "granted_scopes" field.
func GrantedScopesContainsFold(v string) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.FieldContainsFold(FieldGrantedScopes, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AuthorizationCode) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AuthorizationCode) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AuthorizationCode) predicate.AuthorizationCode {
	return predicate.AuthorizationCode(sql.NotPredicates(p))
}
